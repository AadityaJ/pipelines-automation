{"version":3,"sources":["services/google-sheets.ts","selectors/index.ts","components/common/CompanySelector.tsx","actions/Ratio.ts","components/common/Loading.tsx","components/common/Sidepanel.tsx","actions/app.ts","components/Ration-Chart/LineChart.tsx","components/Ration-Chart/index.tsx","components/Home.tsx","components/Management-Interviews/InterviewList.tsx","App.tsx","components/Management-Interviews/index.tsx","actions/Management.ts","reducers/state.ts","reducers/app.ts","reducers/Ratio.ts","reducers/Management.ts","reducers/index.ts","serviceWorker.ts","index.tsx"],"names":["ratioSheet","GoogleSheets","makeQueries","then","v","values","reduce","acc","each","index","dataId","company1Id","company2Id","range1","range2","data1","data2","dates","id","value","map","date","parseInt","company1","isEmpty","data","companyMetadata","push","media","mangName","desig","title","link","sheet","range","fetch","e","json","getRatioState","state","Ratio","getAppState","App","getAllCompanies","createSelector","ratio","allCompanies","getCompany2","company2","isAppLoading","app","loading","getCompany1","appState","companySelected","getManagementData","Management","getCompany1ID","findIndex","getCompany2ID","getRatioData","CompanySelector","this","props","options","label","onChange","companySelectedCallBack","React","Component","connect","getAllCompaniesFromState","dispatch","getState","type","companiesList","Loading","children","className","style","marginLeft","marginTop","color","SidePanel","borderRight","height","padding","selectCompany","company","am4core","am4themes_animated","createData","arr","mean","val","length","stddev","Math","sqrt","concat","compute","slice","topCap","bottomCap","createSeries","chart","valueField","series","am4charts","dataFields","valueY","dateX","LineChart","chartData","dateAxis","xAxes","renderer","minGridDistance","tooltipDateFormat","yAxes","seriesV","seriesM","seriesT","seriesB","cursor","scrollbarX","info","plotContainer","createChild","createLabel","field","titleLabel","text","marginRight","minWidth","valueLabel","fontWeight","width","x","y","background","fill","fillOpacity","layout","valueV","valueM","valueT","valueB","updateValues","dataItem","valueLable","toFixed","events","on","dataItems","last","getSeriesDataItem","toAxisPosition","xPosition","render","dispose","isLoading","getData","company1IdOrNull","company2IdOrNull","ratioDataId","getCompanyData","selectCompany1","selectCompany2","Col","sm","fontFamily","fontSize","Button","onClick","key","Home","columnDefs","headerName","filter","sortable","resizable","cellRenderer","params","InterviewList","rowData","pages","path","name","component","RatioChart","getManagementInterviews","Container","fluid","Navbar","fixed","bg","variant","Brand","Nav","basename","Link","href","Row","InitialState","action","companies","combineReducers","Boolean","window","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","store","createStore","rootReducer","applyMiddleware","routerMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"ycAIMA,EAAa,+CAGNC,EAAb,+GAEE,OAAOA,EAAaC,YAAYF,EAAY,YAAYG,MAAK,SAACC,GAAD,OAC5DA,EAAEC,OAAOC,QAAO,SAACC,EAA2BC,EAAaC,GAExD,OADAF,EAAIE,GAASD,EAAK,GACXD,IACL,SANN,8EAUoCG,EAAgBC,EAAoBC,GAVxE,sFAWQC,EAXR,WAWqBF,EAAa,EAXlC,cAWyCA,EAAa,GAC9CG,EAZR,WAYqBF,EAAa,EAZlC,cAYyCA,EAAa,GAZtD,SAc6BX,EAAaC,YAAYF,EAAYa,GAAQV,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAO,MAd/F,cAcQU,EAdR,gBAe6Bd,EAAaC,YAAYF,EAAYc,GAAQX,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAO,MAf/F,cAeQW,EAfR,iBAiB6Bf,EAAaC,YAAYF,EAAzB,UAA+CG,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAO,MAjBjG,eAiBQY,EAjBR,yBAmBS,CACNC,GAAIR,EACJS,MAAOJ,EAAMK,KAAI,SAACZ,EAAMC,GAAP,MAAkB,CAClCY,KAAMJ,EAAMR,GACZU,MAAOG,SAASd,GAAQc,SAASN,EAAMP,UAvB3C,8LA4B6Cc,GA5B7C,2FA6BqBtB,EAAaC,YA/BV,+CA+BuC,cAAcC,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAOe,KAAI,SAAAZ,GAAI,OAAKgB,kBAAQhB,EAAK,IAAKA,EAAK,GAAIA,EAAK,SA7B/I,cA6BQiB,EA7BR,gBA8BgCxB,EAAaC,YAhCrB,+CAgCkD,cAAcC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UA9BtG,cA8BQqB,EA9BR,OA+BQP,EAAQO,EAAgBpB,QAAO,SAACC,EAAKC,EAAMC,GAWhD,OAVGD,EAAK,KAAOe,GACdhB,EAAIoB,KAAK,CACRN,KAAMb,EAAK,GACXoB,MAAOpB,EAAK,GACZqB,SAAUrB,EAAK,GACfsB,MAAOtB,EAAK,GACZuB,MAAOvB,EAAK,GACZwB,KAAMP,EAAKhB,KAGNF,IACL,IA3CL,kBA4CS,CACNY,QACAD,GAAIK,IA9CP,oIAkD4BU,EAAeC,GACzC,OAAOC,MAAM,iDAAD,OACsCF,EADtC,mBACsDC,EADtD,gBAxDF,4CA0DR/B,MAAK,SAACiC,GAAD,OAAOA,EAAEC,cArDlB,K,QCJMC,EAAgB,SAACC,GAAD,OAAkBA,EAAMC,OACxCC,EAAc,SAACF,GAAD,OAAkBA,EAAMG,KAG/BC,EAAkBC,YAAeN,GAAe,SAACO,GAAD,OAAkBA,EAAMC,gBACxEC,EAAcH,YAAeN,GAAe,SAACO,GAAD,OAAkBA,EAAMG,YACpEC,EAAeL,YAAeH,GAAa,SAACS,GAAD,OAAcA,EAAIC,WAC7DC,EAAcR,YAAeH,GAAa,SAACY,GAAD,OAAmBA,EAASC,mBACtEC,EAAoBX,aANN,SAACL,GAAD,OAAkBA,EAAMiB,cAMiB,SAACH,GAAD,OAA0BA,EAAS5B,QAE1FgC,EAAgBb,YAC5BD,EACAS,GACA,SAACN,EAAcvB,GAAf,OAA4BuB,GAAgBvB,GAAYuB,EAAaY,WAAU,SAAClD,GAAD,OAAUA,IAASe,QAGtFoC,EAAgBf,YAC5BD,EACAI,GACA,SAACD,EAAcE,GAAf,OAA4BF,GAAgBE,GAAYF,EAAaY,WAAU,SAAClD,GAAD,OAAUA,IAASwC,QAGtFY,EAAehB,YAAeN,GAAe,SAACO,GAAD,OAAkBA,EAAMpB,QCF5EoC,E,kLAEJC,KAAKC,MAAMpB,oB,+BAIX,OACC,kBAAC,IAAD,CACCqB,SAfiBlB,EAeIgB,KAAKC,MAAMjB,aAdnCA,GACAA,EAAa1B,KAAI,SAACZ,GAAD,MAAW,CAC3BW,MAAOX,EACPyD,MAAOzD,OAYL0D,SAAUJ,KAAKC,MAAMI,0BAhBL,IAACrB,M,GAOSsB,IAAMC,WAmBrBC,eAJS,SAAC/B,GAAD,MAAmB,CAC1CO,aAAcyB,EAAyBhC,MAGA,CAAEI,gBCpCX,kBAAW,SAAC6B,EAAeC,GACzD,IAAMlC,EAAQkC,IACdD,EAAS,CAAEE,KAAM,kBACbnC,EAAMC,QAAUD,EAAMC,MAAMM,cAC/B7C,EAAa0C,kBAAkBxC,MAAK,SAACwE,GACpCH,EAAS,CAAEE,KAAM,gBAAiBC,kBAClCH,EAAS,CAAEE,KAAM,uBD8BLJ,CAA8CT,G,kBEtB9Ce,EAbyB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,QAAS0B,EAAZ,EAAYA,SAAZ,OACvC,oCACE1B,EACA,yBAAK2B,UAAU,UAAUC,MAAO,CAAEC,WAAY,QAASC,UAAW,UACjE,kBAAC,IAAD,CAAcP,KAAK,OAAOQ,MAAM,YADjC,WAKA,wCAAIL,EAAJ,OCRUM,EAA0C,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAH,OACtD,yBAAKE,MAAO,CAAEK,YAAa,oBAAqBC,OAAQ,QAASC,QAAS,OAAST,ICNvEU,EAAgB,SAACC,GAAD,MAAqC,CACjEd,KAAM,iBACNc,Y,0BCKDC,IAAiBC,KAEjB,IAsBMC,EAAa,SAAClE,GAAD,OAClBA,EAAKnB,QAAO,SAACC,EAAKC,EAAMC,GACvB,GAAIA,GAvBa,GAuBQ,CACxB,IADwB,EArBX,SAACmF,GAChB,IAAMC,EAAOD,EAAItF,QAAO,SAACC,EAAKuF,GAAN,OAAcvF,EAAMuF,IAAK,GAAKF,EAAIG,OAC1D,MAAO,CACNF,OACAG,OAAQC,KAAKC,KACZN,EAAItF,QAAO,SAACC,EAAKuF,GAAN,OAAcvF,EAAI4F,OAAJ,SAAYL,EAAMD,EAAS,MAAI,IAAgBvF,QAAO,SAACC,EAAKuF,GAAN,OAAcvF,EAAMuF,IAAK,IACtGF,EAAIG,OAAS,KAiBUK,CADVC,gBAAM5E,EAAMhB,EAxBX,GAwB+BA,GAAOW,KAAI,SAACgB,GAAD,OAAOA,EAAEjB,UAC3D0E,EAFgB,EAEhBA,KAAMG,EAFU,EAEVA,OACdzF,EAAIoB,KAAK,CACRR,MAAOX,EAAKW,MACZ0E,OACAS,OAAQT,EA9BO,EA8BaG,EAC5BO,UAAWV,EA/BI,EA+BgBG,EAC/B3E,KAAMb,EAAKa,OAGb,OAAOd,IACL,KAEEiG,EAAe,SAACC,EAA0BC,GAC/C,IAAMC,EAASF,EAAME,OAAOhF,KAAK,IAAIiF,KAGrC,OAFAD,EAAOE,WAAWC,OAASJ,EAC3BC,EAAOE,WAAWE,MAAQ,OACnBJ,GAgGKK,GAAb,4MACCP,WADD,oEAGE,IAAMA,EAAQhB,IAAe3B,KAAKC,MAAMtC,KAAKP,GAAI0F,MAhGpC,SAACH,EAA0BhF,GACzC,IAAMwF,EAAYtB,EAAWlE,GAC7BgF,EAAMhF,KAAOwF,EAGb,IAAMC,EAAWT,EAAMU,MAAMxF,KAAK,IAAIiF,KACtCM,EAASE,SAASC,gBAAkB,GACpCH,EAASI,kBAAoB,cAC7Bb,EAAMc,MAAM5F,KAAK,IAAIiF,KAGrB,IAAMY,EAAUhB,EAAaC,EAAO,SAC9BgB,EAAUjB,EAAaC,EAAO,QAC9BiB,EAAUlB,EAAaC,EAAO,UAC9BkB,EAAUnB,EAAaC,EAAO,aAEpCA,EAAMmB,OAAS,IAAIhB,IAEnBH,EAAMoB,WAAa,IAAIpC,IAEvB,IAAMqC,EAAOrB,EAAMsB,cAAcC,YAAYvC,KAW7C,SAASwC,EAAYC,EAAenG,GACnC,IAAMoG,EAAaL,EAAKE,YAAYvC,KACpC0C,EAAWC,KAAOrG,EAAQ,IAC1BoG,EAAWE,YAAc,EACzBF,EAAWG,SAAW,GAEtB,IAAMC,EAAaT,EAAKE,YAAYvC,KAMpC,OALA8C,EAAWrH,GAAKgH,EAChBK,EAAWH,KAAO,IAClBG,EAAWD,SAAW,GACtBC,EAAWF,YAAc,GACzBE,EAAWC,WAAa,SACjBD,EAtBRT,EAAKW,MAAQ,IACbX,EAAKzC,OAAS,IACdyC,EAAKY,EAAI,EACTZ,EAAKa,EAAI,EACTb,EAAKxC,QAAQ,GAAI,GAAI,GAAI,IACzBwC,EAAKc,WAAWC,KAAOpD,IAAc,QACrCqC,EAAKc,WAAWE,YAAc,GAC9BhB,EAAKiB,OAAS,OAkBd,IAAMC,EAASf,EAAY,QAAS,SAC9BgB,EAAShB,EAAY,OAAQ,QAC7BiB,EAASjB,EAAY,SAAU,iBAC/BkB,EAASlB,EAAY,YAAa,iBAExC,SAASmB,EAAaC,EAAkDC,GACvEA,EAAWlB,KAAX,UAAqBiB,GAAYA,EAASvC,OAAOyC,QAAQ,IAG1D9C,EAAM+C,OAAOC,GAAG,SAAS,WACxBL,EAAa5B,EAAQkC,UAAUC,KAAMX,GACrCI,EAAa3B,EAAQiC,UAAUC,KAAMV,GACrCG,EAAazB,EAAQ+B,UAAUC,KAAMR,GACrCC,EAAa1B,EAAQgC,UAAUC,KAAMT,MAGtCzC,EAAMmB,OAAO4B,OAAOC,GAAG,UAAU,WAChCL,EAAa5B,EAAQkC,UAAUC,KAAMX,GACrCI,EAAa3B,EAAQiC,UAAUC,KAAMV,GACrCG,EAAazB,EAAQ+B,UAAUC,KAAMR,GACrCC,EAAa1B,EAAQgC,UAAUC,KAAMT,MAGtCzC,EAAMmB,OAAO4B,OAAOC,GAAG,yBAAyB,WAC/CL,EACClC,EAAS0C,kBAAkBpC,EAASN,EAAS2C,eAAepD,EAAMmB,OAAOkC,YAAY,GACrFd,GAEDI,EACClC,EAAS0C,kBAAkBnC,EAASP,EAAS2C,eAAepD,EAAMmB,OAAOkC,YAAY,GACrFb,GAEDG,EACClC,EAAS0C,kBAAkBjC,EAAST,EAAS2C,eAAepD,EAAMmB,OAAOkC,YAAY,GACrFZ,GAEDE,EACClC,EAAS0C,kBAAkBlC,EAASR,EAAS2C,eAAepD,EAAMmB,OAAOkC,YAAY,GACrFX,MAcDY,CAAOtD,EAAO3C,KAAKC,MAAMtC,KAAKN,OAE9B2C,KAAK2C,MAAQA,IAPf,6CAWM3C,KAAK2C,OACR3C,KAAK2C,MAAMuD,YAZd,+BAiBE,OAAO,yBAAK9I,GAAI4C,KAAKC,MAAMtC,KAAKP,GAAI6D,MAAO,CAAE0D,MAAO,OAAQpD,OAAQ,aAjBtE,GAA+BjB,IAAMC,WC/FtBC,gBARS,SAAC/B,GAAD,MAAmB,CAC1CO,aAAcH,EAAgBJ,GAC9Bd,KAAMmC,EAAarB,GACnBhB,SAAU6B,EAAYb,GACtBS,SAAUD,EAAYR,GACtB0H,UAAWhH,EAAaV,MAGe,CAAE2H,QL/BnB,kBAAW,SAAC1F,EAAeC,GACjD,IAAMlC,EAAQkC,IAER0F,EAAmB1G,EAAclB,GACjC6H,EAAmBzG,EAAcpB,GAEjC8H,EAAW,UAAMjH,EAAYb,GAAlB,YAA4BQ,EAAYR,IACzB,kBAArB4H,GAA6D,kBAArBC,IAClD5F,EAAS,CAAEE,KAAM,kBACjBzE,EAAaqK,eAAeD,EAAaF,EAAkBC,GAAkBjK,MAAK,SAACsB,GAClF+C,EAAS,CACR/C,OACAiD,KAAM,mBAEPF,EAAS,CAAEE,KAAM,uBKiB+B6F,eAAgBhF,EAAeiF,eLrCpD,SAACxH,GAAD,MAAuC,CACpE0B,KAAM,qBACN1B,cKmCcsB,EA9BgC,SAAC,GAAD,IAAGiG,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,eAAgBN,EAAnC,EAAmCA,QAASzI,EAA5C,EAA4CA,KAAMwI,EAAlD,EAAkDA,UAAlD,OAC9C,oCACC,kBAACQ,EAAA,EAAD,CAAKC,GAAI,GACR,kBAAC,EAAD,KACC,wBAAI3F,MAAO,CAAE4F,WAAY,eAAzB,iBACA,yBAAK5F,MAAO,CAAEE,UAAW,MAAO2F,SAAU,SACzC,6DACA,kBAAC,EAAD,CAAiBzG,wBAAyB,SAAC/B,GAAD,OAAYmI,EAAenI,EAAEjB,UACvE,+DACA,kBAAC,EAAD,CAAiBgD,wBAAyB,SAAC/B,GAAD,OAAYoI,EAAepI,EAAEjB,WAExE,kBAAC0J,EAAA,EAAD,CAAQC,QAAS,kBAAMZ,MAAvB,YAGF,kBAACO,EAAA,EAAD,CAAKC,GAAI,IACR,kBAAC,EAAD,CAASvH,QAAS8G,GAChBxI,EAAO,kBAAC,GAAD,CAAWsJ,IAAG,UAAKtJ,EAAKP,IAAMO,KAAMA,IAAW,uDCjC5CuJ,G,uKAJb,OAAO,qE,GAFU5G,IAAMC,W,UCWnB4G,I,cAAa,CAClB,CAAEC,WAAY,OAAQhD,MAAO,OAAQiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,GAC9E,CAAEH,WAAY,QAAShD,MAAO,QAASiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,GAChF,CAAEH,WAAY,kBAAmBhD,MAAO,WAAYiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,GAC7F,CAAEH,WAAY,cAAehD,MAAO,QAASiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,GACtF,CAAEH,WAAY,QAAShD,MAAO,QAASiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,EAAM5C,MAAO,KAC7F,CAAEyC,WAAY,OAAQhD,MAAO,OAAQiD,QAAQ,EAAMC,UAAU,EAAMC,WAAW,EAAMC,aAAc,SAACC,GAAD,wBAAwCA,EAAOpK,MAA/C,mCAGtFqK,GAA8C,SAAC,GAAD,IAAG/J,EAAH,EAAGA,KAAH,OAC1D,yBAAKqD,UAAU,kBAAkBC,MAAQ,CAACM,OAAQ,OAAQoD,MAAO,WACjE,kBAAC,eAAD,CACCwC,WAAYA,GACZQ,QAAShK,EAAKN,UCjBVuK,GAAQ,CACb,CACCC,KAAM,eACN3J,KAAK,gBACL4J,KAAM,cACNC,UAAWC,IAEZ,CACCH,KAAM,yBACN3J,KAAK,0BACL4J,KAAM,wBACNC,UC4BavH,aANS,SAAC/B,GAAD,MAAmB,CAC1CO,aAAcH,EAAgBJ,GAC9B0H,UAAWhH,EAAaV,GACxBd,KAAM8B,EAAkBhB,MAGe,CAAE2H,QC3CnB,kBAAW,SAAC1F,EAAeC,GACjD,IAAMlC,EAAQkC,IAERlD,EAAW6B,EAAYb,GAEL,kBAAbhB,IACViD,EAAS,CAAEE,KAAM,kBACjBzE,EAAa8L,wBAAwBxK,GAAUpB,MAAK,SAAAuI,GACnDlE,EAAS,CAAEE,KAAM,sBAAuBjD,KAAMiH,IAC9ClE,EAAS,CAAEE,KAAM,uBDkC+Ba,iBAApCjB,EA1BmD,SAAC,GAAD,IAAGiB,EAAH,EAAGA,cAAe0E,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,QAASzI,EAAtC,EAAsCA,KAAtC,OACjE,oCACC,kBAACgJ,EAAA,EAAD,CAAKC,GAAI,GACR,kBAAC,EAAD,KACC,wBAAI3F,MAAO,CAAE4F,WAAY,eAAzB,0BACA,yBAAK5F,MAAO,CAAEE,UAAW,MAAO2F,SAAU,SACzC,mDACA,kBAAC,EAAD,CAAiBzG,wBAAyB,SAAC/B,GAAD,OAAYmD,EAAcnD,EAAEjB,WAEvE,kBAAC0J,EAAA,EAAD,CAAQC,QAAS,kBAAMZ,MAAvB,YAGF,kBAACO,EAAA,EAAD,CAAKC,GAAI,IACR,kBAAC,EAAD,CAASvH,QAAS8G,GACfxI,GAAQ,kBAAC,GAAD,CAAeA,KAAMA,WDdlC,CACCkK,KAAM,IACN3J,KAAK,KACL4J,KAAM,OACNC,UAAWb,KA+BEtI,GA3BO,kBACrB,kBAACsJ,EAAA,EAAD,CAAWC,OAAK,GACf,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,GAAG,OAAOC,QAAQ,QACrC,kBAACH,EAAA,EAAOI,MAAR,aACA,kBAACC,EAAA,EAAD,CAAKzH,UAAU,WACd,kBAAC,IAAD,CAAQ0H,SAAS,KACfd,GAAMtK,KAAI,SAACZ,EAAMuK,GAAP,OACV,kBAACwB,EAAA,EAAIE,KAAL,CAAU1B,IAAKA,EAAK2B,KAAMlM,EAAKwB,MAC7BxB,EAAKoL,SAGR,gCAIH,kBAACe,EAAA,EAAD,CAAK5H,MAAO,CAAEE,UAAW,OACxB,kBAAC,IAAD,CAAQuH,SAAS,KAChB,kBAAC,IAAD,KACEd,GAAMtK,KAAI,SAACZ,GAAD,OACV,kBAAC,IAAD,CAAOuK,IAAKvK,EAAKoL,KAAMD,KAAMnL,EAAKmL,KAAME,UAAWrL,EAAKqL,oB,SGDjDe,GAAsB,CAClClK,IAAK,CACJY,gBAAiB,GACjBH,SAAS,GAEVX,MAAO,CACNM,aAAc,KACdE,SAAU,KACVvB,KAAM,MAEP+B,WAAY,CACX/B,KAAM,OClCOyB,GArBH,WAA8D,IAA7DX,EAA4D,uDAA/CqK,GAAalK,IAAKmK,EAA6B,uCACxE,OAAQA,EAAOnI,MACd,IAAK,iBACJ,OAAO,gBACHnC,EADJ,CAECe,gBAAiBuJ,EAAOrH,UAE1B,IAAK,gBACJ,OAAO,gBACHjD,EADJ,CAECY,SAAS,IAEX,IAAK,eACJ,OAAO,gBACHZ,EADJ,CAECY,SAAS,IAEX,QACC,OAAOZ,ICGKuK,GArBG,WAAoE,IAAnEvK,EAAkE,uDAAnDqK,GAAapK,MAAOqK,EAA+B,uCACpF,OAAQA,EAAOnI,MACd,IAAK,gBACJ,OAAO,gBACHnC,EADJ,CAECO,aAAc+J,EAAOlI,gBAEvB,IAAK,qBACJ,OAAO,gBACHpC,EADJ,CAECS,SAAU6J,EAAO7J,WAEnB,IAAK,iBACJ,OAAO,gBACHT,EADJ,CAECd,KAAMoL,EAAOpL,OAEf,QACC,OAAOc,ICPKuK,GAXG,WAAmF,IAAlFvK,EAAiF,uDAA7DqK,GAAapJ,WAAYqJ,EAAoC,uCACnG,OAAQA,EAAOnI,MACd,IAAK,sBACJ,OAAO,gBACHnC,EADJ,CAECd,KAAMoL,EAAOpL,OAEf,QACC,OAAOc,ICLKwK,eAAgB,CAC9BrK,OACAF,SACAgB,gBCGmBwJ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCFN,IAAMC,GAAmBJ,OAAeK,sCAAwCC,IAEnEC,GAAUC,cACjBC,GAAQC,YAAYC,GAAaP,GAAgBQ,YAAgBC,YAAiBN,IAAUO,OAElGC,IAASjE,OACR,kBAAC,IAAMkE,WAAP,KACC,kBAAC,IAAD,CAAUP,MAAOA,IAChB,kBAAC,IAAD,KACC,kBAAC,GAAD,SAIHQ,SAASC,eAAe,SD8GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnO,MAAK,SAAAoO,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0b0b54bd.chunk.js","sourcesContent":["import { isEmpty } from 'lodash';\nimport { RatioData, ManagementData } from '../reducers/state';\nconst key = 'AIzaSyD7sMa9tWyeQ-9imPVlZr18vCGC5yr82Ks';\n\nconst ratioSheet = '1pmXJKMq2ApiaSnUmEIkdpXQWwLOZ3eaMuoK9wea3RN0';\nconst managementSheet = '13n92BF7dzExJ9Y4jf4S3Wg_9umwz26I_ZUY6JuIAOEk';\n\nexport class GoogleSheets {\n\tpublic static getAllCompanies(): Promise<string[]> {\n\t\treturn GoogleSheets.makeQueries(ratioSheet, 'B2:B1848').then((v) =>\n\t\t\tv.values.reduce((acc: { [x: string]: any }, each: any[], index: string | number) => {\n\t\t\t\tacc[index] = each[0];\n\t\t\t\treturn acc;\n\t\t\t}, []),\n\t\t);\n\t}\n\n\tpublic static async getCompanyData(dataId: string, company1Id: number, company2Id: number): Promise<RatioData> {\n\t\tconst range1 = `C${company1Id + 2}:IU${company1Id + 2}`;\n\t\tconst range2 = `C${company2Id + 2}:IU${company2Id + 2}`;\n\n\t\tconst data1: any[] = await GoogleSheets.makeQueries(ratioSheet, range1).then((v) => v.values[0]);\n\t\tconst data2: any[] = await GoogleSheets.makeQueries(ratioSheet, range2).then((v) => v.values[0]);\n\n\t\tconst dates: any[] = await GoogleSheets.makeQueries(ratioSheet, `C1:IU1`).then((v) => v.values[0]);\n\n\t\treturn {\n\t\t\tid: dataId,\n\t\t\tvalue: data1.map((each, index) => ({\n\t\t\t\tdate: dates[index],\n\t\t\t\tvalue: parseInt(each) / parseInt(data2[index]),\n\t\t\t})),\n\t\t};\n\t}\n\n\tpublic static async getManagementInterviews(company1: string): Promise<ManagementData> {\n\t\tconst data = await GoogleSheets.makeQueries(managementSheet, 'H2:I100000').then((v) => v.values.map(each => (isEmpty(each[0])? each[1]: each[0])));\n\t\tconst companyMetadata = await GoogleSheets.makeQueries(managementSheet, 'B2:G100000').then((v) => v.values);\n\t\tconst value = companyMetadata.reduce((acc, each, index) => {\n\t\t\tif(each[1] === company1){\n\t\t\t\tacc.push({\n\t\t\t\t\tdate: each[0],\n\t\t\t\t\tmedia: each[2],\n\t\t\t\t\tmangName: each[3],\n\t\t\t\t\tdesig: each[4],\n\t\t\t\t\ttitle: each[5],\n\t\t\t\t\tlink: data[index],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\t\treturn {\n\t\t\tvalue,\n\t\t\tid: company1,\n\t\t}\n\t}\n\n\tprivate static makeQueries(sheet: string, range: string): Promise<{ values: any[] }> {\n\t\treturn fetch(\n\t\t\t`https://sheets.googleapis.com/v4/spreadsheets/${sheet}/values/${range}?key=${key}`,\n\t\t).then((e) => e.json());\n\t}\n}\n","import { createSelector } from 'reselect';\nimport { State, Ratio, App, Management } from '../reducers/state';\n\nconst getRatioState = (state: State) => state.Ratio;\nconst getAppState = (state: State) => state.App;\nconst getManagementState = (state: State) => state.Management;\n\nexport const getAllCompanies = createSelector(getRatioState, (ratio: Ratio) => ratio.allCompanies);\nexport const getCompany2 = createSelector(getRatioState, (ratio: Ratio) => ratio.company2);\nexport const isAppLoading = createSelector(getAppState, (app: App) => app.loading);\nexport const getCompany1 = createSelector(getAppState, (appState: App) => appState.companySelected);\nexport const getManagementData = createSelector(getManagementState, (appState: Management) => appState.data);\n\nexport const getCompany1ID = createSelector(\n\tgetAllCompanies,\n\tgetCompany1,\n\t(allCompanies, company1) => allCompanies && company1 && allCompanies.findIndex((each) => each === company1),\n);\n\nexport const getCompany2ID = createSelector(\n\tgetAllCompanies,\n\tgetCompany2,\n\t(allCompanies, company2) => allCompanies && company2 && allCompanies.findIndex((each) => each === company2),\n);\n\nexport const getRatioData = createSelector(getRatioState, (ratio: Ratio) => ratio.data);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\nimport { getAllCompanies } from '../../actions/Ratio';\nimport { State, Ratio } from '../../reducers/state';\nimport { getAllCompanies as getAllCompaniesFromState } from '../../selectors';\n\n// 'AIzaSyD7sMa9tWyeQ-9imPVlZr18vCGC5yr82Ks'\n\ninterface CompanySelectorInterface {\n\tgetAllCompanies: typeof getAllCompanies;\n\tallCompanies: Ratio['allCompanies'];\n\tcompanySelectedCallBack: any;\n}\n\nconst optionMaker = (allCompanies: Ratio['allCompanies']) =>\n\tallCompanies &&\n\tallCompanies.map((each) => ({\n\t\tvalue: each,\n\t\tlabel: each,\n\t}));\n\nclass CompanySelector extends React.Component<CompanySelectorInterface> {\n\tcomponentDidMount() {\n\t\tthis.props.getAllCompanies();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\toptions={optionMaker(this.props.allCompanies) as any}\n\t\t\t\tonChange={this.props.companySelectedCallBack}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state: State) => ({\n\tallCompanies: getAllCompaniesFromState(state),\n});\n\nexport default connect(mapStateToProps, { getAllCompanies })(CompanySelector);\n","import { State } from '../reducers/state';\nimport { GoogleSheets } from '../services/google-sheets';\nimport { SelectCompany2 } from './action-types';\nimport { getCompany1ID, getCompany2ID, getCompany1, getCompany2 } from '../selectors';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getAllCompanies = (): any => (dispatch: any, getState: () => State) => {\n\tconst state = getState();\n\tdispatch({ type: 'Start Loading' });\n\tif (state.Ratio && !state.Ratio.allCompanies) {\n\t\tGoogleSheets.getAllCompanies().then((companiesList) => {\n\t\t\tdispatch({ type: 'Get Companies', companiesList });\n\t\t\tdispatch({ type: 'Stop Loading' });\n\t\t});\n\t}\n};\n\nexport const selectCompany2 = (company2: string): SelectCompany2 => ({\n\ttype: 'Company 2 Selected',\n\tcompany2,\n});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const getData = (): any => (dispatch: any, getState: () => State) => {\n\tconst state = getState();\n\n\tconst company1IdOrNull = getCompany1ID(state);\n\tconst company2IdOrNull = getCompany2ID(state);\n\n\tconst ratioDataId = `${getCompany1(state)}~${getCompany2(state)}`;\n\tif (typeof company1IdOrNull === 'number' && typeof company2IdOrNull === 'number') {\n\t\tdispatch({ type: 'Start Loading' });\n\t\tGoogleSheets.getCompanyData(ratioDataId, company1IdOrNull, company2IdOrNull).then((data) => {\n\t\t\tdispatch({\n\t\t\t\tdata,\n\t\t\t\ttype: 'Get Ratio Data',\n\t\t\t});\n\t\t\tdispatch({ type: 'Stop Loading' });\n\t\t});\n\t}\n};\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\ninterface LoadingProps {\n\tloading: boolean;\n}\n\nconst Loading: React.FC<LoadingProps> = ({ loading, children }) => (\n\t<>\n\t\t{loading ? (\n\t\t\t<div className=\"loading\" style={{ marginLeft: '750px', marginTop: '250px' }}>\n\t\t\t\t<ReactLoading type=\"bars\" color=\"#326ecf\" />\n\t\t\t\tLoading\n\t\t\t</div>\n\t\t) : (\n\t\t\t<> {children} </>\n\t\t)}\n\t</>\n);\n\nexport default Loading;\n","import React from 'react';\n\ninterface SidePanelInterface {\n\tchildren: unknown;\n}\n\n// eslint-disable-next-line react/prop-types\nexport const SidePanel: React.FC<SidePanelInterface> = ({ children }) => (\n\t<div style={{ borderRight: '1px solid #DCDCDC', height: '890px', padding: '2%' }}>{children}</div>\n);\n","import { SelectCompany } from './action-types';\n\nexport const selectCompany = (company: string): SelectCompany => ({\n\ttype: 'Select Company',\n\tcompany,\n});\n","import React from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\n// eslint-disable-next-line @typescript-eslint/camelcase\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { slice } from 'lodash';\n\nimport { RatioData, RatioDataLineItem } from '../../reducers/state';\n\nam4core.useTheme(am4themes_animated);\n\nconst SigmaAdder = 2;\nconst daysLookup = 20;\n\nconst compute = (arr: number[]) => {\n\tconst mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n\treturn {\n\t\tmean,\n\t\tstddev: Math.sqrt(\n\t\t\tarr.reduce((acc, val) => acc.concat((val - mean) ** 2), [] as number[]).reduce((acc, val) => acc + val, 0) /\n\t\t\t\t(arr.length - 1),\n\t\t),\n\t};\n};\n\ninterface ChartLine {\n\tvalue: number;\n\tmean: number;\n\ttopCap: number;\n\tbottomCap: number;\n\tdate: string;\n}\n\nconst createData = (data: RatioDataLineItem[]) =>\n\tdata.reduce((acc, each, index) => {\n\t\tif (index >= daysLookup) {\n\t\t\tconst window = slice(data, index - daysLookup, index).map((e) => e.value);\n\t\t\tconst { mean, stddev } = compute(window);\n\t\t\tacc.push({\n\t\t\t\tvalue: each.value,\n\t\t\t\tmean,\n\t\t\t\ttopCap: mean - SigmaAdder * stddev,\n\t\t\t\tbottomCap: mean + SigmaAdder * stddev,\n\t\t\t\tdate: each.date,\n\t\t\t});\n\t\t}\n\t\treturn acc;\n\t}, [] as ChartLine[]);\n\nconst createSeries = (chart: am4charts.XYChart, valueField: string) => {\n\tconst series = chart.series.push(new am4charts.LineSeries());\n\tseries.dataFields.valueY = valueField;\n\tseries.dataFields.dateX = 'date';\n\treturn series;\n};\n\nconst render = (chart: am4charts.XYChart, data: RatioDataLineItem[]) => {\n\tconst chartData = createData(data);\n\tchart.data = chartData;\n\n\t// Create axes\n\tconst dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n\tdateAxis.renderer.minGridDistance = 60;\n\tdateAxis.tooltipDateFormat = 'dd-MMM-yyyy';\n\tchart.yAxes.push(new am4charts.ValueAxis());\n\n\t// Create series\n\tconst seriesV = createSeries(chart, 'value');\n\tconst seriesM = createSeries(chart, 'mean');\n\tconst seriesT = createSeries(chart, 'topCap');\n\tconst seriesB = createSeries(chart, 'bottomCap');\n\n\tchart.cursor = new am4charts.XYCursor();\n\n\tchart.scrollbarX = new am4core.Scrollbar();\n\n\tconst info = chart.plotContainer.createChild(am4core.Container);\n\tinfo.width = 250;\n\tinfo.height = 100;\n\tinfo.x = 0;\n\tinfo.y = 0;\n\tinfo.padding(10, 10, 10, 10);\n\tinfo.background.fill = am4core.color('#000');\n\tinfo.background.fillOpacity = 0.1;\n\tinfo.layout = 'grid';\n\n\t// Create labels\n\tfunction createLabel(field: string, title: string) {\n\t\tconst titleLabel = info.createChild(am4core.Label);\n\t\ttitleLabel.text = title + ':';\n\t\ttitleLabel.marginRight = 5;\n\t\ttitleLabel.minWidth = 60;\n\n\t\tconst valueLabel = info.createChild(am4core.Label);\n\t\tvalueLabel.id = field;\n\t\tvalueLabel.text = '-';\n\t\tvalueLabel.minWidth = 50;\n\t\tvalueLabel.marginRight = 30;\n\t\tvalueLabel.fontWeight = 'bolder';\n\t\treturn valueLabel;\n\t}\n\n\tconst valueV = createLabel('value', 'Value');\n\tconst valueM = createLabel('mean', 'Mean');\n\tconst valueT = createLabel('topCap', 'Mean + 2Sigma');\n\tconst valueB = createLabel('bottomCap', 'Mean - 2Sigma');\n\n\tfunction updateValues(dataItem: am4charts.XYSeriesDataItem | undefined, valueLable: am4core.Label) {\n\t\tvalueLable.text = `${dataItem && dataItem.valueY.toFixed(3)}`;\n\t}\n\n\tchart.events.on('ready', () => {\n\t\tupdateValues(seriesV.dataItems.last, valueV);\n\t\tupdateValues(seriesM.dataItems.last, valueM);\n\t\tupdateValues(seriesB.dataItems.last, valueB);\n\t\tupdateValues(seriesT.dataItems.last, valueT);\n\t});\n\n\tchart.cursor.events.on('hidden', () => {\n\t\tupdateValues(seriesV.dataItems.last, valueV);\n\t\tupdateValues(seriesM.dataItems.last, valueM);\n\t\tupdateValues(seriesB.dataItems.last, valueB);\n\t\tupdateValues(seriesT.dataItems.last, valueT);\n\t});\n\n\tchart.cursor.events.on('cursorpositionchanged', () => {\n\t\tupdateValues(\n\t\t\tdateAxis.getSeriesDataItem(seriesV, dateAxis.toAxisPosition(chart.cursor.xPosition), true),\n\t\t\tvalueV,\n\t\t);\n\t\tupdateValues(\n\t\t\tdateAxis.getSeriesDataItem(seriesM, dateAxis.toAxisPosition(chart.cursor.xPosition), true),\n\t\t\tvalueM,\n\t\t);\n\t\tupdateValues(\n\t\t\tdateAxis.getSeriesDataItem(seriesB, dateAxis.toAxisPosition(chart.cursor.xPosition), true),\n\t\t\tvalueT,\n\t\t);\n\t\tupdateValues(\n\t\t\tdateAxis.getSeriesDataItem(seriesT, dateAxis.toAxisPosition(chart.cursor.xPosition), true),\n\t\t\tvalueB,\n\t\t);\n\t});\n};\n\ninterface LineChartInterface {\n\tdata: RatioData;\n}\n\nexport class LineChart extends React.Component<LineChartInterface> {\n\tchart: am4charts.XYChart | undefined;\n\tcomponentDidMount() {\n\t\tconst chart = am4core.create(this.props.data.id, am4charts.XYChart);\n\n\t\trender(chart, this.props.data.value);\n\n\t\tthis.chart = chart;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.chart) {\n\t\t\tthis.chart.dispose();\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <div id={this.props.data.id} style={{ width: '500%', height: '60%' }} />;\n\t}\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Button } from 'react-bootstrap';\nimport CompanySelector from '../common/CompanySelector';\nimport Loading from '../common/Loading';\nimport { SidePanel } from '../common/Sidepanel';\nimport { State, RatioData } from '../../reducers/state';\nimport { selectCompany } from '../../actions/app';\nimport { selectCompany2, getData } from '../../actions/Ratio';\nimport { LineChart } from './LineChart';\nimport { getRatioData, getAllCompanies, getCompany1, getCompany2, isAppLoading } from '../../selectors';\n\ninterface RationChartProps {\n\tselectCompany1: typeof selectCompany;\n\tselectCompany2: typeof selectCompany2;\n\tgetData: typeof getData;\n\tdata: RatioData | null;\n\tcompany1: string | null;\n\tcompany2: string | null;\n\tisLoading: boolean;\n}\n\n// const selectCallbackProxy = (callback, ...args) => ({value}) => callback(value, ...args);\n\nconst RatioChart: React.FC<RationChartProps> = ({ selectCompany1, selectCompany2, getData, data, isLoading }) => (\n\t<>\n\t\t<Col sm={2}>\n\t\t\t<SidePanel>\n\t\t\t\t<h3 style={{ fontFamily: 'sans-serif' }}> Ratio Chart </h3>\n\t\t\t\t<div style={{ marginTop: '10%', fontSize: '12px' }}>\n\t\t\t\t\t<h6> Selected Company Numerator: </h6>\n\t\t\t\t\t<CompanySelector companySelectedCallBack={(e: any) => selectCompany1(e.value)} />\n\t\t\t\t\t<h6> Selected Company Denomenator: </h6>\n\t\t\t\t\t<CompanySelector companySelectedCallBack={(e: any) => selectCompany2(e.value)} />\n\t\t\t\t</div>\n\t\t\t\t<Button onClick={() => getData()}>Submit</Button>\n\t\t\t</SidePanel>\n\t\t</Col>\n\t\t<Col sm={14}>\n\t\t\t<Loading loading={isLoading}>\n\t\t\t\t{data ? <LineChart key={`${data.id}`} data={data} /> : <h2> Select Companies</h2>}\n\t\t\t</Loading>\n\t\t</Col>\n\t</>\n);\n\nconst mapStateToProps = (state: State) => ({\n\tallCompanies: getAllCompanies(state),\n\tdata: getRatioData(state),\n\tcompany1: getCompany1(state),\n\tcompany2: getCompany2(state),\n\tisLoading: isAppLoading(state),\n});\n\nexport default connect(mapStateToProps, { getData, selectCompany1: selectCompany, selectCompany2: selectCompany2 })(\n\tRatioChart,\n);\n","import React from 'react';\nclass Home extends React.Component<{}> {\n\trender() {\n\t\treturn <> Page under Construction </>;\n\t}\n}\n\nexport default Home;\n","import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport { ManagementData } from '../../reducers/state';\n\ninterface InterviewListProps {\n\tdata: ManagementData\n}\n\nconst columnDefs = [\n\t{ headerName: \"Date\", field: \"date\", filter: true, sortable: true, resizable: true },\n\t{ headerName: \"Media\", field: \"media\", filter: true, sortable: true, resizable: true },\n\t{ headerName: \"Management Name\", field: \"mangName\", filter: true, sortable: true, resizable: true },\n\t{ headerName: \"Designation\", field: \"desig\", filter: true, sortable: true, resizable: true },\n\t{ headerName: \"Title\", field: \"title\", filter: true, sortable: true, resizable: true, width: 500 },\n\t{ headerName: \"Link\", field: \"link\", filter: true, sortable: true, resizable: true, cellRenderer: (params: { value: any; }) => `<a href=${params.value} target=\"_blank\"> Link </a>` },\n];\n\nexport const InterviewList: React.FC<InterviewListProps> = ({ data }) => (\n\t<div className=\"ag-theme-alpine\" style={ {height: '100%', width: '1525px'} }>\n\t<AgGridReact\n\t\tcolumnDefs={columnDefs}\n\t\trowData={data.value}>\n\t</AgGridReact>\n  </div>\n);\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Navbar, Nav, Container, Row } from 'react-bootstrap';\n\nimport RatioChart from './components/Ration-Chart';\nimport Home from './components/Home';\nimport ManagementInterviews from './components/Management-Interviews';\n\nconst pages = [\n\t{\n\t\tpath: '/ratio-chart',\n\t\tlink: `#/ratio-chart`,\n\t\tname: 'Ratio Chart',\n\t\tcomponent: RatioChart,\n\t},\n\t{\n\t\tpath: '/management-interviews',\n\t\tlink: `#/management-interviews`,\n\t\tname: 'Management Interviews',\n\t\tcomponent: ManagementInterviews,\n\t},\n\t{\n\t\tpath: '/',\n\t\tlink: `#/`,\n\t\tname: 'Home',\n\t\tcomponent: Home,\n\t},\n];\n\nconst App: React.FC = () => (\n\t<Container fluid>\n\t\t<Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n\t\t\t<Navbar.Brand>Menu</Navbar.Brand>\n\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t<Router basename=\"/\">\n\t\t\t\t\t{pages.map((each, key) => (\n\t\t\t\t\t\t<Nav.Link key={key} href={each.link}>\n\t\t\t\t\t\t\t{each.name}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t))}\n\t\t\t\t\t<br />\n\t\t\t\t</Router>\n\t\t\t</Nav>\n\t\t</Navbar>\n\t\t<Row style={{ marginTop: '3%' }}>\n\t\t\t<Router basename=\"/\">\n\t\t\t\t<Switch>\n\t\t\t\t\t{pages.map((each) => (\n\t\t\t\t\t\t<Route key={each.name} path={each.path} component={each.component} />\n\t\t\t\t\t))}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</Row>\n\t</Container>\n);\n\nexport default App;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Button } from 'react-bootstrap';\nimport CompanySelector from '../common/CompanySelector';\nimport Loading from '../common/Loading';\nimport { SidePanel } from '../common/Sidepanel';\nimport { State, ManagementData } from '../../reducers/state';\nimport { selectCompany } from '../../actions/app';\nimport { getAllCompanies, isAppLoading, getManagementData } from '../../selectors';\nimport { getData } from '../../actions/Management';\nimport { InterviewList } from './InterviewList';\n\ninterface ManagementInterviewsProps {\n\tdata: ManagementData | null;\n\tselectCompany: typeof selectCompany;\n\tisLoading: boolean;\n\tgetData: typeof getData;\n}\n\n// const selectCallbackProxy = (callback, ...args) => ({value}) => callback(value, ...args);\n\nconst ManagementInterviews: React.FC<ManagementInterviewsProps> = ({ selectCompany, isLoading, getData, data }) => (\n\t<>\n\t\t<Col sm={2}>\n\t\t\t<SidePanel>\n\t\t\t\t<h3 style={{ fontFamily: 'sans-serif' }}> Management Interviews</h3>\n\t\t\t\t<div style={{ marginTop: '10%', fontSize: '12px' }}>\n\t\t\t\t\t<h6> Selected Company: </h6>\n\t\t\t\t\t<CompanySelector companySelectedCallBack={(e: any) => selectCompany(e.value)} />\n\t\t\t\t</div>\n\t\t\t\t<Button onClick={() => getData()}>Submit</Button>\n\t\t\t</SidePanel>\n\t\t</Col>\n\t\t<Col sm={14}>\n\t\t\t<Loading loading={isLoading}>\n\t\t\t\t{ data && <InterviewList data={data} /> }\n\t\t\t</Loading>\n\t\t</Col>\n\t</>\n);\n\nconst mapStateToProps = (state: State) => ({\n\tallCompanies: getAllCompanies(state),\n\tisLoading: isAppLoading(state),\n\tdata: getManagementData(state),\n});\n\nexport default connect(mapStateToProps, { getData, selectCompany })(ManagementInterviews);\n","import { getCompany1 } from '../selectors';\nimport { GoogleSheets } from '../services/google-sheets';\nimport { State } from '../reducers/state';\n\nexport const getData = (): any => (dispatch: any, getState: () => State) => {\n\tconst state = getState();\n\n\tconst company1 = getCompany1(state);\n\n\tif (typeof company1 === 'string') {\n\t\tdispatch({ type: 'Start Loading' });\n\t\tGoogleSheets.getManagementInterviews(company1).then(x => {\n\t\t\tdispatch({ type: 'Get Management Data', data: x});\n\t\t\tdispatch({ type: 'Stop Loading' });\n\t\t});\n\t}\n};\n","interface Loadable {\n\tloading: boolean;\n}\nexport interface App extends Loadable {\n\tcompanySelected: string;\n}\n\nexport interface Ratio {\n\tallCompanies: string[] | null;\n\tcompany2: string | null;\n\tdata: RatioData | null;\n}\n\nexport interface RatioData {\n\tid: string;\n\tvalue: RatioDataLineItem[];\n}\n\nexport interface RatioDataLineItem {\n\tdate: string;\n\tvalue: number;\n}\n\nexport interface Management {\n\tdata: ManagementData | null;\n}\n\nexport interface ManagementData {\n\tid: string;\n\tvalue: ManagementDataLineItem[];\n}\n\nexport interface ManagementDataLineItem {\n\tdate: string;\n\tmedia: string;\n\tmangName: string;\n\tdesig: string;\n\ttitle: string;\n\tlink: string;\n}\n\nexport interface State {\n\tApp: App;\n\tRatio: Ratio;\n\tManagement: Management;\n}\n\nexport const InitialState: State = {\n\tApp: {\n\t\tcompanySelected: '',\n\t\tloading: false,\n\t},\n\tRatio: {\n\t\tallCompanies: null,\n\t\tcompany2: null,\n\t\tdata: null,\n\t},\n\tManagement: {\n\t\tdata: null,\n\t},\n};\n","import { InitialState, App } from './state';\nimport { ActionTypes } from '../actions/action-types';\n\nconst app = (state: App = InitialState.App, action: ActionTypes): App => {\n\tswitch (action.type) {\n\t\tcase 'Select Company':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompanySelected: action.company,\n\t\t\t};\n\t\tcase 'Start Loading':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase 'Stop Loading':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default app;\n","import { InitialState, Ratio } from './state';\nimport { ActionTypes } from '../actions/action-types';\n\nconst companies = (state: Ratio = InitialState.Ratio, action: ActionTypes): Ratio => {\n\tswitch (action.type) {\n\t\tcase 'Get Companies':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tallCompanies: action.companiesList,\n\t\t\t};\n\t\tcase 'Company 2 Selected':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcompany2: action.company2,\n\t\t\t};\n\t\tcase 'Get Ratio Data':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.data,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default companies;\n","import { InitialState, Management } from './state';\nimport { ActionTypes } from '../actions/action-types';\n\nconst companies = (state: Management = InitialState.Management, action: ActionTypes): Management => {\n\tswitch (action.type) {\n\t\tcase 'Get Management Data':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.data\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nexport default companies;\n","import { combineReducers } from 'redux';\n\nimport App from './app';\nimport Ratio from './Ratio';\nimport Management from './Management';\n\nexport default combineReducers({\n\tApp,\n\tRatio,\n\tManagement\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport rootReducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancer = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createBrowserHistory();\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(routerMiddleware(history), thunk)));\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}